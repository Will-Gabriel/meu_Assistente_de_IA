# Inmporta m√≥dulo para interagir com o sistema operacional
import os

# Importa a biblioteca Streamlit para criar a interface web interativa
import streamlit as st

# Importa a classe Groq para se conectar √† API da plataforma Groq e acessar o LLM
from groq import Groq

# configura a p√°gina do Streamlit com T√≠tulo, ione, layout e estado inicial da sidebar
st.set_page_config (
    page_title = "WG AI Coder",
    page_icon = "ü§ñ",
    layout = "wide",
    initial_sidebar_state = "expanded"
)

# Define um prompt de sistema que descreve as regras e comportamento do Assistente de IA
CUSTOM_PROMPT = """
Voc√™ √© o "WG Ai Coder", um assistente de IA especialista em programa√ß√£o, com foco principal em Python. Sua miss√£o √© ajudar desenvolvedore com iniciantes com d√∫vidas de programa√ß√£o de forma clara, precisa e √∫til.

REGRAS DE OPERA√á√ÉO:
1. **Foco em Programa√ß√£o**: Responda apenas as perguntas relacionadas a programa√ß√£o, algoritmos, estruturas de dados, bibliotecas e frameworks. Se o usu√°rio perguntar sobre outro assunto, responda educadamente que seu foco √© exclusivo √† programa√ß√£o.
2. **Estrutura da Resposta**: Sempre formate suas respostas da seguinte maneira:
    * **Explica√ß√£o Clara**: Comece com uma explica√ß√£o conceitual sobre o t√≥pico perguntado, Seja direto e did√°tico.
    * **Exemplo de C√≥digo**: Forne√ßa um ou mais blocos de c√≥digo em Python com a sintaxe correta. O c√≥digo deve ser bem comentado para explicar as partes importantes.
    * **Detalhes do C√≥digo**: Ap√≥s o bloco de c√≥digo, descreva em detalhes o que cada parte do c√≥digo faz, explicando a l√≥gica e as fun√ß√µes utilizadas.
    * **Documenta√ß√£o de Refer√™ncia**: Ao final, inclua uma se√ß√£o chamada "üìö Documenta√ß√£o de Refer√™ncia" com o link direto e relevante para a documenta√ß√£o oficial da Linguagem Python (docs.python.org) ou da biblioteca em quest√£o.
3. **Clareza e Precis√£o**: Use uma linguagem clara. Evite jar√ß√µes desnecess√°rios. Suas respostas devem ser tecnicamente precisas.
"""

# Cria o conte√∫do da barra lateral no Streamlit
with st.sidebar:
    # define o t√≠tulo da barra lateral
    st.title("ü§ñ WG AI Coder")

    # Mostra um texto explicativo sobre o assistente
    st.markdown("Assistente de IA focado em programa√ß√£o Python!")

    # Campo para inserir a chave de API da Groq
    groq_api_key = st.text_input (
        "Insira sua API Key Groq",
        tupe = "password",
        help = "Caso ainda n√£o possua sua chave de API, basta criar em https://console.groq.com/keys"
    )

    # Adcionar linha divis√≥ria e explica√ß√µes extras na barra lateral
    st.markdown("---")
    st.markdown("Desenvolvi essa IA para auxiliar voc√™ em suas d√∫vidas de programa√ß√£o com Linguagem Python. Lembre-se que, a IA pode cometer erros. Sempre verifique e teste suas respostas!")

    st.markdown("---")
    st.markdown("Acesse meu LinkedIn e conecte-se comigo!")
    st.markdown("[Linkedin - Wilian Gabriel](https://www.linkedin.com/in/will-gabriel/)", unsafe_allow_html=True)
    # st.markdown('<a href="https://www.linkedin.com/in/will-gabriel/" target="_blank">Acesse meu LinkedIn e conecte-se comigo.</a>',
    # unsafe_allow_html=True)

# T√≠tulo da P√°gina Principal
st.title("ü§ñ WG AI Coder")

# Subtitulo adicional
st.title("Seu assistente pessoal de Programa√ß√£o Python üêç")

# Texto auxiliar abaixo do t√≠tulo
st.caption("Fa√ßa sua pergunta sobre a linguagem Python e obtenha c√≥digo, explica√ß√µes e refer√™ncias.")

# Inicializa o hist√≥rico de mensagens na sess√£o, caso ainda n√£o exista
if "messages" not in st.session_state:
    st.session_state.messages = []

# Exibe todas as mensagens anteriores armazenadas no estado da sess√£o
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])
